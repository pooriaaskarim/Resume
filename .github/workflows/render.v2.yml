name: Render LaTeX Resume

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch
    paths:
      - 'resume/**'  # Trigger only if files in the resume directory are changed
  workflow_dispatch:  # Allows manual triggering from the GitHub UI

permissions:
  contents: write  # Allow actions to push commits and create tags

jobs:
  versioning:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.versioning.outputs.NEW_TAG }}  # Output the new tag for use in other jobs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get latest tag and increment version
        id: versioning
        run: |
          # Fetch all tags
          git fetch --tags
          
          # Get the latest tag, if available
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1` || echo "none")

          if [ "$LATEST_TAG" = "none" ]; then
            # If no tags exist, start from version 1
            VERSION=1
          else
            # Extract the version number from the latest tag (assuming format v<version_number>.<YYMONTHDD>)
            VERSION=$(echo $LATEST_TAG | sed 's/v\([0-9]*\)\..*/\1/')
            VERSION=$((VERSION + 1))  # Increment the version
          fi
          
          # Generate the new tag in v<version_number>.<YYMONTHDD> format
          NEW_TAG="v$VERSION.$(date +'%y')$(date +'%b' | tr '[:lower:]' '[:upper:]')$(date +'%d')"
          
          # Use the new environment file method to set the output
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_OUTPUT

  build:
    needs: versioning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Restore the cached TeX Live installation (to avoid reinstalling)
      - name: Cache TeX Live installation
        uses: actions/cache@v2
        with:
          path: /usr/local/texlive  # Path to the TeX Live installation
          key: ${{ runner.os }}-texlive-${{ hashFiles('resume/resume.tex') }}  # Cache key based on OS and LaTeX file hash
          restore-keys: |
            ${{ runner.os }}-texlive-

      # Install TeX Live and required fonts for LaTeX rendering (if not cached)
      - name: Install TeX Live and Fonts
        run: |
          if [ ! -d "/usr/local/texlive" ]; then
            sudo apt-get update
            sudo apt-get install -y texlive-full texlive-fonts-extra  # Install full LaTeX and extra fon
